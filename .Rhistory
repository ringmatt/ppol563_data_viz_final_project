specificity = 4)
df_tract_iunemployed <- df_tract_icivlabor %>%
as_tibble() %>%
filter(variable == "Estimate_Total_In labor force_Civilian labor force_Unemployed") %>%
select(c(GEOID, year, civ_unemp = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_iunemployed, by = c("GEOID", "year"))
rm(df_tract_iunemployed)
df_tract_iemployed <- df_tract_icivlabor %>%
as_tibble() %>%
filter(variable == "Estimate_Total_In labor force_Civilian labor force_Employed") %>%
select(c(GEOID, year, civ_unemp = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_iemployed, by = c("GEOID", "year"))
rm(df_tract_iemployed)
rm(df_tract_icivlabor)
# Poverty
df_tract_ipover <- temporalData5YearACS("B17001", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Income in the past 12 months below poverty level") %>%
mutate(poverty_rate = estimate/summary_est) %>%
select(c(GEOID, year, poverty_rate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_ipover, by = c("GEOID", "year"))
rm(df_tract_ipover)
# Internet Access
df_tract_ointernet <- temporalData5YearACS("B28011", geo = "county",
years = 2017:2019,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Total_No Internet access") %>%
mutate(internet_access = (summary_est - estimate)/summary_est) %>%
select(c(GEOID, year, internet_access))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_ointernet, by = c("GEOID", "year"))
rm(df_tract_ointernet)
# Health Insurance Coverage
df_tract_ohealthcov <- temporalData5YearACS("B27001", geo = "county",
years = 2012:2019,
states = st, geometry = F,
specificity = 4) %>%
as_tibble() %>%
filter(grepl("With health insurance coverage", variable)) %>%
group_by(GEOID, year) %>%
dplyr::summarize(healthcare_coverage = sum(estimate)/mean(summary_est, na.rm = T))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_ohealthcov, by = c("GEOID", "year"))
rm(df_tract_ohealthcov)
# Means of Transportation
df_tract_otransport <- temporalData5YearACS("B08301", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2)
df_tract_opublictransit <- df_tract_otransport %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Public transportation (excluding taxicab)") %>%
select(c(GEOID, year, pub_transit = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_opublictransit, by = c("GEOID", "year"))
rm(df_tract_opublictransit)
df_tract_oworkfromhome <- df_tract_otransport %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Worked at home") %>%
select(c(GEOID, year, work_from_home = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_oworkfromhome, by = c("GEOID", "year"))
rm(df_tract_oworkfromhome)
rm(df_tract_otransport)
# Public or SNAP Assistance
df_tract_apubsnap <- temporalData5YearACS("B19058", geo = "county",
years = 2010:2019,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Total_With cash public assistance or Food Stamps/SNAP") %>%
mutate(percent_with_cash_pub_assist_or_snap = estimate/summary_est) %>%
select(c(GEOID, year, percent_with_cash_pub_assist_or_snap))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_apubsnap, by = c("GEOID", "year"))
rm(df_tract_apubsnap)
# Medicare Insurance Status
df_tract_amedins <- temporalData5YearACS("C27006", geo = "county",
years = 2012:2019,
states = st, geometry = F,
specificity = 4) %>%
as_tibble() %>%
filter(grepl("With Medicare coverage", variable)) %>%
group_by(GEOID, year) %>%
dplyr::summarize(medicare_coverage = sum(estimate)/mean(summary_est, na.rm = T))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_amedins, by = c("GEOID", "year"))
rm(df_tract_amedins)
# Race
df_tract_drace <- temporalData5YearACS("B02001", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) #%>%
df_tract_dpop <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total") %>%
select(c(GEOID, year, pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dpop, by = c("GEOID", "year"))
rm(df_tract_dpop)
df_tract_dwhite <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_White alone") %>%
select(c(GEOID, year, white_pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dwhite, by = c("GEOID", "year"))
rm(df_tract_dwhite)
df_tract_dblack <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Black or African American alone") %>%
select(c(GEOID, year, black_pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dblack, by = c("GEOID", "year"))
rm(df_tract_dblack)
df_tract_dnative <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_American Indian and Alaska Native alone") %>%
select(c(GEOID, year, nativeAm_pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dnative, by = c("GEOID", "year"))
rm(df_tract_dnative)
df_tract_dasian <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Asian alone") %>%
select(c(GEOID, year, asian_pop = estimate,))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dasian, by = c("GEOID", "year"))
rm(df_tract_dasian)
df_tract_dislander <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Native Hawaiian and Other Pacific Islander alone") %>%
select(c(GEOID, year, islander_pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dislander, by = c("GEOID", "year"))
rm(df_tract_dislander)
df_tract_dmixed <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Two or more races") %>%
select(c(GEOID, year, mixedRace_pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dmixed, by = c("GEOID", "year"))
rm(df_tract_dmixed)
df_tract_dother <- df_tract_drace %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Some other race alone") %>%
select(c(GEOID, year, other_pop = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dother, by = c("GEOID", "year"))
rm(df_tract_dother)
rm(df_tract_drace)
# Hispanic
df_tract_dlatinx <- temporalData5YearACS("B03001", geo = "county",
years = years,
states = st, geometry = TRUE,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Total_Hispanic or Latino") %>%
select(c(GEOID, year, latinx_pop = estimate, geometry))
# Geometry
df_tract_geometry <- df_tract_dlatinx %>%
select(c(GEOID, geometry))
# Removes geometry from latinx data
df_tract_dlatinx <- df_tract_dlatinx %>%
select(-c(geometry))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_dlatinx, by = c("GEOID", "year"))
rm(df_tract_dlatinx)
# Rent
df_tract_rent <- temporalData5YearACS("B25064", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
select(c(GEOID, year, med_rent = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_rent, by = c("GEOID", "year"))
rm(df_tract_rent)
# Monthly Owner Costs
df_tract_homecosts <- temporalData5YearACS("B25088", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Median selected monthly owner costs (dollars)_Total") %>%
select(c(GEOID, year, med_monthly_home_cost = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_homecosts, by = c("GEOID", "year"))
rm(df_tract_homecosts)
# Remove plyr so dplyr will be used
detach(package:plyr)
# Save
df %>%
arrange(year, GEOID) %>%
write.csv("data/processed/spatial/census.csv")
# Shapefile
df %>%
left_join(df_tract_geometry) %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
rgdal::writeOGR(dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
df %>%
as_tibble()
df %>%
as_tibble() %>%
filter(GEOID == "11001" & year == 2010)
test <- df %>%
as_tibble() %>%
filter(GEOID == "11001" & year == 2010)
test
View(test)
View(test)
df %>%
as_tibble() %>%
distinct(.keep_all = F)
df <- df %>%
as_tibble() %>%
distinct(.keep_all = T)
# Monthly Owner Costs
df_tract_homecosts <- temporalData5YearACS("B25088", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Median selected monthly owner costs (dollars)_Total") %>%
select(c(GEOID, year, med_monthly_home_cost = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_homecosts, by = c("GEOID", "year"))
rm(df_tract_homecosts)
# Once again, removes non-distinct values
df <- df %>%
as_tibble() %>%
distinct(.keep_all = T)
# Remove plyr so dplyr will be used
detach(package:plyr)
# Save
df %>%
arrange(year, GEOID) %>%
write.csv("data/processed/spatial/census.csv")
# Shapefile
df %>%
left_join(df_tract_geometry) %>%
distinct(.keep_all = T) %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
rgdal::writeOGR(dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
df
require(plyr)
df_tract_homecosts <- temporalData5YearACS("B25088", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Median selected monthly owner costs (dollars)_Total") %>%
select(c(GEOID, year, med_monthly_home_cost = estimate))
# Appends to main dataset and removes old object
df <- df %>%
left_join(df_tract_homecosts, by = c("GEOID", "year"))
#rm(df_tract_homecosts)
# Once again, removes non-distinct values
df <- df %>%
as_tibble() %>%
distinct(.keep_all = T)
# Remove plyr so dplyr will be used
detach(package:plyr)
# Save
df %>%
arrange(year, GEOID) %>%
write.csv("data/processed/spatial/census.csv")
# Shapefile
df %>%
left_join(df_tract_geometry) %>%
distinct(.keep_all = T) %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
rgdal::writeOGR(dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
df
df_tract_homecosts
View(extract5YearACSData)
View(temporalData5YearACS)
View(temporalData5YearACS)
for (j in 1:length(c(NULL))){
print(j)
}
for (j in 1:length(c(NULL))-1){
print(j)
}
c(NULL)[0]
c(NULL)[1]
for (j in 1:length(c())){
print(j)
}
for (j in 1:1){
print(j)
}
length(c(NULL))
length(c(NULL, NULL))
vector(length = 1)
vector(NULL, length = 1)
for (j in 1:vector(length = 1)){
print(j)
}
for (j in 1:length(1)){
print(j)
}
for (j in 1:length(NULL)){
print(j)
}
for (j in 1:length(1)){
print(j)
}
for (j in 1:length(1)){
print(j)
}
df_tract_homecosts <- temporalData5YearACS("B25088", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Median selected monthly owner costs (dollars)_Total") %>%
select(c(GEOID, year, med_monthly_home_cost = estimate))
require(plyr)
df_tract_homecosts <- temporalData5YearACS("B25088", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Median selected monthly owner costs (dollars)_Total") %>%
select(c(GEOID, year, med_monthly_home_cost = estimate))
df_tract_homecosts
df_tract_homecosts %>%
arrange( GEOID, year)
source("scripts/wrangling/census_extraction_functions/ACSFunctionsPackage.R")
acsFunctionsPackage()
df_tract_homecosts <- temporalData5YearACS("B25088", geo = "county",
years = years,
states = st, geometry = F,
specificity = 2) %>%
as_tibble() %>%
filter(variable == "Estimate_Median selected monthly owner costs (dollars)_Total") %>%
select(c(GEOID, year, med_monthly_home_cost = estimate))
df_tract_homecosts %>%
arrange( GEOID, year)
df %>%
left_join(df_tract_geometry) %>%
distinct(.keep_all = T) %>%
st_as_sf() %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
rgdal::writeOGR(dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
df %>%
left_join(df_tract_geometry) %>%
distinct(.keep_all = T) %>%
st_as_sf() %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
rgdal::writeOGR(., dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
df_spatial <- df %>%
left_join(df_tract_geometry) %>%
distinct(.keep_all = T) %>%
st_as_sf() %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070)
df_spatial
st_write(df_spatial, dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
df
df_spatial
View(df_spatial)
df_tract_geometry
df_tract_geometry <- df_tract_geometry %>%
distinct(GEOID, .keep_all = T)
df_tract_geometry
df_spatial <- df %>%
left_join(df_tract_geometry) %>%
distinct(.keep_all = T) %>%
st_as_sf() %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070)
st_write(df_spatial, dsn = "tempdir", layer = "census", driver = "ESRI Shapefile")
st_write(df_spatial, dsn = "data/processed/spatial", layer = "census", driver = "ESRI Shapefile")
## Data and package imports
# package
library(tidyverse)
library(sf)
# data
df_census <-
read.csv("data/processed/census.csv") %>%
as_tibble() %>%
select(-c(X))
df_sf <-
rgdal::readOGR('data/processed/spatial/census/census.shp') %>%
st_as_sf() %>%
mutate(GEOID = as.integer(GEOID)) %>%
select(GEOID, geometry)
df_homelessness <-
read.csv("data/processed/hud_homelessness.csv") %>%
as_tibble()
# calculates CoC population
df_homelessness_cocPop <-
df_homelessness %>%
left_join(df_census %>%
select(c(GEOID, year, pop))) %>%
group_by(coc_number, year) %>%
summarize(coc_pop = sum(pop*pct_cnty_pop_coc, na.rm = T))
# weights homelessness counts by a county's population within a CoC
df_homelessness <-
df_homelessness %>%
left_join(df_census %>%
select(c(GEOID, year, pop))) %>%
left_join(df_homelessness_cocPop) %>%
mutate(exp_homelessness = ifelse(!is.na(pop),
coc_exp_homelessness*(pop*pct_cnty_pop_coc/coc_pop),
NA)) %>%
select(c(GEOID, year, exp_homelessness)) %>%
filter(!is.na(exp_homelessness))
df_transit <-
read.csv("data/processed/ipcd_transportation.csv") %>%
as_tibble() %>%
# Converts tract to county
mutate(GEOID = as.integer(substr(as.character(GEOID), 1,
nchar(as.character(GEOID))-6))) %>%
select(-c(X)) %>%
# Groups by county
group_by(GEOID) %>%
summarize(bike_2021 = sum(bike),
bus_2021 = sum(bus),
ferry_2021 = sum(ferry),
train_2021 = sum(train),
air_2021 = sum(air))
#df_schools <-
#  read.csv("data/processed/schools.csv") %>%
#  as_tibble() %>%
# Converts tract to county
#  mutate(GEOID = as.integer(substr(GEOID, 1, nchar(GEOID)-6))) %>%
#  group_by(GEOID, year) %>%
#  summarize(public_schools = sum(public_schools),
#            private_schools = sum(private_schools),
#            postsecondary_schools = sum(postsecondary_schools))
df_housing <-
read.csv("data/processed/building_permits_1990_2019.csv") %>%
as_tibble() %>%
select(-c(X)) %>%
arrange(GEOID, year)
# Note these are hospitals present in 2017
df_hospital <-
read.csv("data/processed/hospital_rating_location.csv") %>%
as_tibble() %>%
select(-c(X, county, state)) %>%
filter(!is.na(GEOID))
df_countyfips_crosswalk <-
read.csv("data/raw/crosswalks/county_fips.csv") %>%
as_tibble() %>%
select(GEOID = FIPS, name = Name, state = State)
## Pre-Merge Cleaning
## Merging
df <- df_housing %>%
left_join(df_countyfips_crosswalk) %>%
left_join(df_homelessness) %>%
left_join(df_transit) %>%
left_join(df_census) %>%
left_join(df_hospital) %>%
#left_join(df_sf) %>%
arrange(GEOID, year)
## Saving
# Non-Spatial
df %>%
write.csv("data/processed/master_dataset.csv")
df %>%
filter(GEOID %in% df_census$GEOID) %>%
write.csv("data/processed/DMV_dataset.csv")
# Spatial
df %>%
left_join(df_sf) %>%
st_as_sf() %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
st_write(., dsn = "data/processed/spatial/master_dataset", layer = "master_dataset", driver = "ESRI Shapefile")
df %>%
filter(GEOID %in% df_census$GEOID) %>%
left_join(df_sf) %>%
st_as_sf() %>%
# Transforms to NAD83 coordinates
st_transform(crs = 5070) %>%
st_write(., dsn = "data/processed/spatial/DMV_dataset", layer = "DMV_dataset", driver = "ESRI Shapefile")
