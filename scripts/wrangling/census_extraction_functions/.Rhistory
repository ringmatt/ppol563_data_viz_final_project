df <- temporalData1YearACS("B02003", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2011, 2012))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 3)
knitr::opts_chunk$set(echo = TRUE)
# Add key to .Renviron
Sys.setenv(CENSUS_KEY="2f018b883dd35f1fd0f30cdf8b1a8663cff19bdb")
# Reload .Renviron
#readRenviron("~/.Renviron")
# Check to see that the expected key is output in your R console
Sys.getenv("2f018b883dd35f1fd0f30cdf8b1a8663cff19bdb")
# Load in necessary packages
library(censusapi)
# 'plyr' and 'dplyr' are included for the rbind.fill function used below.
# It may not be necessary, but it helps with the potential for different columns
# in different years
library(plyr)
library(dplyr)
# Imports tidyverse set of packages
library(tidyverse)
# 'knitr' is used to make tables display better in markdown
library(knitr)
# Imports the ggplot2 library for visualization purposes
library(ggplot2)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Imports the necessary csv files
stateYearlyPops <- read.csv("../../SupportingInfo/stateYearlyPopEstimates.csv",
check.names = F)
stateIDs <- read.csv("../../SupportingInfo/stateIDs.csv", check.names = F)
# Merges the data
fullStateData <- merge(stateIDs, stateYearlyPops)
# Saves a subset with only IDs and names
idAndName <- subset(fullStateData, select=c("State", "StateID"))
# Changes the name of the "StateID" column in
# `idAndName` so that it can be merged later
idAndName <- idAndName %>%
rename(state = StateID)
# Saves a subset with only id and yearly populations
idAndYearlyPop <- subset(fullStateData, select=c("StateID",
as.character(seq(2000,2019))))
# Imports a csv of all states' county FIPS
countyFIPS <- read.csv("../../SupportingInfo/CountyFIPS.csv",
check.names = FALSE)
# Changes the state and county FIPS to strings
countyFIPS$State_FIPS <- sprintf("%02d", countyFIPS$State_FIPS)
countyFIPS$County_FIPS <- sprintf("%03d", countyFIPS$County_FIPS)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2011, 2012))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 3)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2011, 2012))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2011, 2012))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2005, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Replaces all NAs with 0
dfNormed[is.na(dfNormed)] <- 0
# Removes all counties which have no data
dfNormed <- dfNormed[rowSums(subset(dfNormed,
select = -c(state, county, year)),
na.rm = T) != 0,]
# Prepares the countyFIPS dataset for merging with our data
countyFIPS_Reduced <- subset(countyFIPS, select = -c(FIPS, State))
countyFIPS_Reduced <- countyFIPS_Reduced %>%
rename(County = Name, State = State_Name, state = State_FIPS,
county = County_FIPS)
# Changes to state IDs to their actual names, for clarity's sake
dfNormed <- merge(countyFIPS_Reduced, dfNormed,
by = c("state", "county")) %>%
select(-c(state, county))
colnames(df)
colnames(df)
colnames(dfNormed)
dfNormed[ , colSums(is.na(dfNormed)) == 0]
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
dfNormed <- dfNormed[ , colSums(is.na(dfNormed)) == 0]
# Replaces all NAs with 0
dfNormed[is.na(dfNormed)] <- 0
# Removes all counties which have no data
dfNormed <- dfNormed[rowSums(subset(dfNormed,
select = -c(state, county, year)),
na.rm = T) != 0,]
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2005, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(2019)
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
View(df)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
colnames(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
colnames(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
colnames(df)
View(df)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2005, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Replaces all NAs with 0
dfNormed[is.na(dfNormed)] <- 0
# Removes all counties which have no data
dfNormed <- dfNormed[rowSums(subset(dfNormed,
select = -c(state, county, year)),
na.rm = T) != 0,]
# Prepares the countyFIPS dataset for merging with our data
countyFIPS_Reduced <- subset(countyFIPS, select = -c(FIPS, State))
countyFIPS_Reduced <- countyFIPS_Reduced %>%
rename(County = Name, State = State_Name, state = State_FIPS,
county = County_FIPS)
# Changes to state IDs to their actual names, for clarity's sake
dfNormed <- merge(countyFIPS_Reduced, dfNormed,
by = c("state", "county")) %>%
select(-c(state, county))
# Sets the minimum and maximum values for the margin of error
minManu <- dfNormed$Estimate_Black_or_African_American_alone - dfNormed$Margin_of_Error_Black_or_African_American_alone
maxManu <- dfNormed$Estimate_Black_or_African_American_alone + dfNormed$Margin_of_Error_Black_or_African_American_alone
# Creates a timeseries plot of moving occupations as a percent of state workforce
ggplot(data = dfNormed,
aes(x = year,
y = Estimate_Black_or_African_American_alone,
group = County, color = County))+
geom_ribbon(aes(ymin= minManu, ymax = maxManu),
fill= "grey25", alpha = 0.1, colour = NA)+
geom_line()+
ggtitle("Moving Occupations as a Percent of County Workforce") +
xlab("Year") + ylab("Moving Occupations (% of County Workforce)")+
theme_classic()+
theme(panel.ontop = TRUE,
panel.background = element_rect(color = "white", fill = NA),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
plot.title = element_text(size=16, face="bold",
margin = margin(10, 0, 10, 0)))+
scale_color_brewer(palette="Dark2")+
ylim(c(0.05,0.15))
colnames(dfNormed)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
View(df)
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
df
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2018, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
# Sets the states to Georgia and Michigan
nj <- c("34")
# Sets the years
years <- as.character(seq(2005, 2019))
# Creates a dataframe of each state's workforce occupations by year
df <- temporalData1YearACS("B02001", years, nj, countyLevel = TRUE, specificity = 2)
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Imports functions from separate files
source("../../Functions/Func_Group_Finder.R")
source("../../Functions/Func_ACS1_Data_Extraction.R")
source("../../Functions/Func_Change_Column_Names.R")
source("../../Functions/Func_ACS1_Temporal_Data.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Population_Adjustment.R")
source("../../Functions/Func_Normalize_Data.R")
# Creates a normalized dataframe
dfNormed <- normalizeVars(df)
# Replaces all NAs with 0
dfNormed[is.na(dfNormed)] <- 0
# Removes all counties which have no data
dfNormed <- dfNormed[rowSums(subset(dfNormed,
select = -c(state, county, year)),
na.rm = T) != 0,]
# Prepares the countyFIPS dataset for merging with our data
countyFIPS_Reduced <- subset(countyFIPS, select = -c(FIPS, State))
countyFIPS_Reduced <- countyFIPS_Reduced %>%
rename(County = Name, State = State_Name, state = State_FIPS,
county = County_FIPS)
# Changes to state IDs to their actual names, for clarity's sake
dfNormed <- merge(countyFIPS_Reduced, dfNormed,
by = c("state", "county")) %>%
select(-c(state, county))
colnames(dfNormed)
# Sets the minimum and maximum values for the margin of error
minManu <- dfNormed$Estimate_Black_or_African_American_alone - dfNormed$Estimate_Black_or_African_American_alone
maxManu <- dfNormed$Estimate_Black_or_African_American_alone + dfNormed$Estimate_Black_or_African_American_alone
# Creates a timeseries plot of moving occupations as a percent of state workforce
ggplot(data = dfNormed,
aes(x = year,
y = Estimate_Black_or_African_American_alone,
group = County, color = County))+
geom_ribbon(aes(ymin= minManu, ymax = maxManu),
fill= "grey25", alpha = 0.1, colour = NA)+
geom_line()+
ggtitle("Moving Occupations as a Percent of County Workforce") +
xlab("Year") + ylab("Moving Occupations (% of County Workforce)")+
theme_classic()+
theme(panel.ontop = TRUE,
panel.background = element_rect(color = "white", fill = NA),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
plot.title = element_text(size=16, face="bold",
margin = margin(10, 0, 10, 0)))+
scale_color_brewer(palette="Dark2")+
ylim(c(0.05,0.15))
# Saves the figure
#ggsave("../../Visualizations/Moving_Occ_2Ga.png")
# Sets the minimum and maximum values for the margin of error
minManu <- dfNormed$Estimate_Black_or_African_American_alone - dfNormed$Estimate_Black_or_African_American_alone
maxManu <- dfNormed$Estimate_Black_or_African_American_alone + dfNormed$Estimate_Black_or_African_American_alone
# Creates a timeseries plot of moving occupations as a percent of state workforce
ggplot(data = dfNormed,
aes(x = year,
y = Estimate_Black_or_African_American_alone,
group = County, color = County))+
geom_ribbon(aes(ymin= minManu, ymax = maxManu),
fill= "grey25", alpha = 0.1, colour = NA)+
geom_line()+
ggtitle("Moving Occupations as a Percent of County Workforce") +
xlab("Year") + ylab("Moving Occupations (% of County Workforce)")+
theme_classic()+
theme(panel.ontop = TRUE,
panel.background = element_rect(color = "white", fill = NA),
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
plot.title = element_text(size=16, face="bold",
margin = margin(10, 0, 10, 0)))
# Saves the figure
#ggsave("../../Visualizations/Moving_Occ_2Ga.png")
